{"ast":null,"code":"import axios from\"axios\";const API_URL=\"/api/users\";const authService={login:async(email,password)=>{const{data}=await axios.post(\"\".concat(API_URL,\"/login\"),{email,password});localStorage.setItem(\"token\",data.token);return data.user;},register:async(name,email,password,role)=>{const{data}=await axios.post(\"\".concat(API_URL,\"/register/\").concat(role),{name,email,password});localStorage.setItem(\"token\",data.token);}};export default authService;","map":{"version":3,"names":["axios","API_URL","authService","login","email","password","data","post","concat","localStorage","setItem","token","user","register","name","role"],"sources":["D:/Downloads/barbershop/frontend/src/services/authService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"/api/users\";\r\n\r\nconst authService = {\r\n  login: async (email, password) => {\r\n    const { data } = await axios.post(`${API_URL}/login`, { email, password });\r\n    localStorage.setItem(\"token\", data.token);\r\n    return data.user;\r\n  },\r\n  register: async (name, email, password, role) => {\r\n    const { data } = await axios.post(`${API_URL}/register/${role}`, {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n    localStorage.setItem(\"token\", data.token);\r\n  },\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAG,YAAY,CAE5B,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,CAAE,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAChC,KAAM,CAAEC,IAAK,CAAC,CAAG,KAAM,CAAAN,KAAK,CAACO,IAAI,IAAAC,MAAA,CAAIP,OAAO,WAAU,CAAEG,KAAK,CAAEC,QAAS,CAAC,CAAC,CAC1EI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,IAAI,CAACK,KAAK,CAAC,CACzC,MAAO,CAAAL,IAAI,CAACM,IAAI,CAClB,CAAC,CACDC,QAAQ,CAAE,KAAAA,CAAOC,IAAI,CAAEV,KAAK,CAAEC,QAAQ,CAAEU,IAAI,GAAK,CAC/C,KAAM,CAAET,IAAK,CAAC,CAAG,KAAM,CAAAN,KAAK,CAACO,IAAI,IAAAC,MAAA,CAAIP,OAAO,eAAAO,MAAA,CAAaO,IAAI,EAAI,CAC/DD,IAAI,CACJV,KAAK,CACLC,QACF,CAAC,CAAC,CACFI,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,IAAI,CAACK,KAAK,CAAC,CAC3C,CACF,CAAC,CAED,cAAe,CAAAT,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}